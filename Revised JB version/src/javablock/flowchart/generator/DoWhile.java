/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package javablock.flowchart.generator;

import config.Global;
import config.translator;
import javablock.flowchart.Flowchart;
import javablock.flowchart.JBlock;
import javablock.flowchart.blocks.CPUBlock;
import javablock.flowchart.blocks.DecisionBlock;
import javablock.flowchart.blocks.JumpBlock;
import javax.swing.JOptionPane;

/**
 *
 * @author tshepiso
 */
public class DoWhile extends javax.swing.JPanel implements Generator{

    /**
     * Creates new form DoWhile
     */
    public DoWhile() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        comp = new javax.swing.JComboBox();
        variable = new javax.swing.JTextField();
        jTextField3 = new javax.swing.JTextField();

        jLabel1.setText("Variable:");

        jLabel2.setText("Condition:");

        comp.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "<", "≤", "=", "≥", ">", "≠" }));

        variable.setText("i");
        variable.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                variableActionPerformed(evt);
            }
        });

        jTextField3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(jLabel1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(comp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, 148, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(variable, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(variable, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(comp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(27, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void variableActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_variableActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_variableActionPerformed

    private void jTextField3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField3ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox comp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField variable;
    // End of variables declaration//GEN-END:variables

    @Override
    public JBlock[] get(Flowchart f) {
        DoWhile g=this;
        int res=JOptionPane.showConfirmDialog(Global.Window, g, 
                translator.get("generator.dowhile.title"),
                JOptionPane.OK_CANCEL_OPTION, JOptionPane.PLAIN_MESSAGE);
        if(res==JOptionPane.OK_OPTION){
            int p=0;

            JBlock[] list=new JBlock[8];

            DecisionBlock condition=(DecisionBlock) JBlock.make(JBlock.Type.DECISION, f);
            condition.setCode(g.variable.getText()+" "+g.comp.getSelectedItem() + " " + g.jTextField3.getText());
            list[p++]=condition;   //-----2

            CPUBlock process=(CPUBlock) JBlock.make(JBlock.Type.CPU, f);
            process.setCode("");
            process.setPos(0,-90);
            process.connectTo(condition);
            list[p++]=process;
            

            JumpBlock jump, jump2;
            
                        
            jump=(JumpBlock) JBlock.make(JBlock.Type.JUMP, f);
            jump.setPos(200,-200);
            //process.connectTo(jump);
            //jump.connectTo(jump);
            list[p++]=jump; //-----3

            jump2=(JumpBlock) JBlock.make(JBlock.Type.JUMP, f);
            jump2.setPos(200,0);
            condition.connectTo(jump2); //Jump.(true )
            jump2.connectTo(jump);
            list[p++]=jump2;    //-----4

            jump2=(JumpBlock) JBlock.make(JBlock.Type.JUMP, f);
            jump2.setPos(200,-150);
            jump2.connectTo(jump);
            list[p++]=jump2;    //-----5

            jump=(JumpBlock) JBlock.make(JBlock.Type.JUMP, f);
            jump.setPos(0,-150);
            jump.connectTo(process);
            
            list[p++]=jump; //-----6
            
            jump2=(JumpBlock) JBlock.make(JBlock.Type.JUMP, f);
            jump2.setPos(0,-200);
            //process.connectTo(jump);
            jump2.connectTo(jump);
            list[p++]=jump2; //-----3

            jump=(JumpBlock) JBlock.make(JBlock.Type.JUMP, f);  //Bottom jump.(false)
            jump.setPos(0,100);
            condition.connectTo(jump);
            list[p++]=jump; //-----7

            return list;
        }
        return null;
    }
}
